<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- HandlerMapping 处理器映射 表示请求的url和bean映射 -->
	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

	<!-- HandlerAdapter 处理器适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- ViewResolver 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 处理器 -->
	<bean name="/hello1" class="it.zhao.cn.HelloZhao" />
	
	<!--  
	<bean name="/hellowithPOST" class="it.zhao.cn.HelloZhao" >
			<property name="supportedMethods" value="POST"></property>
	</bean>
	-->
	<!-- 请求的连接为http://localhost:8080/chapter2/hello 系统将请求为hello拦截到，然后经过control处理后； 
		通过视图解析器找到对应返回出来的压面； -->
	<!-- 抽象的控制器AbstractController-->
	<bean name="/helloAbstract" class="it.zhao.cn.abstractController.HelloWorldControllerAbstract" />
	
	<bean name="/WithoutReturnModelAndView" class="it.zhao.cn.abstractController.HelloWorldWithoutReturnModelAndViewController"/>
	
    <bean name="/helloCache" class="it.zhao.cn.abstractController.HelloWorldCacheController">
        <property name="cacheSeconds" value="5"/>
    </bean>
    <!--将请求交给servlet处理 ，控制器是ServletForwardingController(Spring集成的不需要自己配)-->
    <bean name="/forwardToServlet" class="org.springframework.web.servlet.mvc.ServletForwardingController">
        <property name="servletName" value="ForwardingServlet"></property>
    </bean>
    
    <bean name="/abstractCommand" class="it.zhao.cn.baseCommandController.MyAbstractCommandController">
        <!-- 也可以通过依赖注入 注入命令实现类 -->
        <!-- property name="commandClass" value="cn.javass.chapter4.model.UserModel"/-->
    </bean>
    <bean name="/simpleForm" class="it.zhao.cn.baseCommandController.RegisterSimpleFormController">
        <property name="formView" value="register"/>
        <property name="successView" value="success"/>
        <!--<property name="successView" value="redirect:/success"/> 重定向到success防止重复提交-->
    </bean>
    
    <bean name="/canCancelForm" class="it.zhao.cn.baseCommandController.CanCancelRegisterSimpleFormController">
        <property name="formView" value="register"/>
        <property name="successView" value="success"/>
        <!-- 
        <property name="successView" value="redirect:/success"/> 
        <property name="cancelView" value="redirect:/cancel"/>
         -->
        <property name="cancelView" value="cancel"/>                
        <property name="cancelParamKey" value="_cancel"/>
    </bean>
    <!-- cancelParamKey用于判断是否取消的请求参数名，如果请求参数数据中含有"_cancel"则表示取消，将调用oncancel方法 -->
    <bean name="/success" class="it.zhao.cn.abstractController.SuccessController"/>
    <bean name="/cancel"  class="it.zhao.cn.abstractController.CancelController"/>
    
    <bean name="/infoFillWizard" class="it.zhao.cn.baseCommandController.InfoFillWizardFormController">
        <property name="pages">
            <list>
                <value>wizard/baseInfo</value>
                <value>wizard/schoolInfo</value>
                <value>wizard/workInfo</value>
            </list>
        </property>
    </bean>
    <!-- 
    <input type="submit" name="_target1" value="上一步"/>
	<input type="submit" name="_finish" value="完成"/>
		向导完成后会自动调用processFinish方法
	<input type="submit" name="_cancel" value="取消"/>
		向导完成后会自动调用ProcessCancel方法
     -->
     <bean name="/parameterizableView" class="org.springframework.web.servlet.mvc.ParameterizableViewController">
        <property name="viewName" value="success"/>
    </bean>
    <!-- 参数化视图控制器，不进行功能处理（即静态视图），根据参数的逻辑视图名直接选择需要展示的视图。比如请求http://localhost:8080/webmvc3/a.html
    	页面会自动跳转到a.jsp,意思是只是拦截到然后找到响应的view来进行处理，如果有property的话那么会根据配置在url前或者后面添加相应的数据来进行解析
     -->
    <bean name="/index?"        class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index1/*"      class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index2/**"     class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/*.html"        class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index3/*.html" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/*.htm"         class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test"/>
        <property name="suffix" value="test"/>
    </bean> 
    <bean name="/long/long"     class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test1"></property>
    </bean>
    <bean name="/long/**/abc"   class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test2"/>
    </bean>
    <bean name="/long/**"       class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test3"/>
    </bean>
    <bean name="/**"            class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test4"></property>
    </bean>
</beans>
<!-- 还剩最后一个multiActionController了 -->

